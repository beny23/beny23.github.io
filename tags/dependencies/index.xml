<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dependencies on Tales about Software Engineering</title><link>https://beny23.github.io/tags/dependencies/</link><description>Recent content in dependencies on Tales about Software Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>Software Design Systems</copyright><lastBuildDate>Fri, 21 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://beny23.github.io/tags/dependencies/index.xml" rel="self" type="application/rss+xml"/><item><title>The Case Against Automatic Dependency Updates</title><link>https://beny23.github.io/posts/automatic_dependency_updates/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://beny23.github.io/posts/automatic_dependency_updates/</guid><description>The question of automatic dependency updates came up in our Slack channel the other day. There was a lot of nodding on how it is a good thing. Tools like Dependabot and Renovate were mentioned. Yet I was a dissenting voice. Why?
The case for automatic dependency updates is simple and seductive:
A bot would automatically scan your dependencies in your source code and create pull requests to update your libraries to the latest versions, sometimes even automatically merging it in.</description></item></channel></rss>