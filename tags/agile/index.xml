<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>agile on Tales about Software Engineering</title><link>https://beny23.github.io/tags/agile/</link><description>Recent content in agile on Tales about Software Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>Software Design Systems</copyright><lastBuildDate>Tue, 16 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://beny23.github.io/tags/agile/index.xml" rel="self" type="application/rss+xml"/><item><title>DevOps Enterprise Summit - simple paper cranes</title><link>https://beny23.github.io/posts/devops_enterprise_summit_2023_tuesday/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><guid>https://beny23.github.io/posts/devops_enterprise_summit_2023_tuesday/</guid><description>As I am sitting on the 16th floor of the Okura Hotel in Amsterdam in my Batman pyjamas and facing a large mirror, just glimpsing the paper crane that was so lovingly put on my pillow, I&amp;rsquo;m starting to reflect what has happened during the day. I was lucky enough to be a guest at the DevOps Enterprise Summit. There was certainly plenty of things to get excited about.
I&amp;rsquo;d meet Gene Kim, who&amp;rsquo;s been running this conference for 10 years and who wrote the Phoenix Project.</description></item><item><title>Your Best Engineers Should Look After the Worst Systems</title><link>https://beny23.github.io/posts/worst_jobs_for_best_engineers/</link><pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate><guid>https://beny23.github.io/posts/worst_jobs_for_best_engineers/</guid><description>&amp;ldquo;Outdated tech stack and metaphorical gaffer tape holding together the code&amp;rdquo; - sound familiar? How about &amp;ldquo;We can&amp;rsquo;t recruit, because nobody wants to touch this legacy stuff&amp;rdquo;? Yet banks and governments would stop working if mainframes were switched off.
Instead of outsourcing to the lowest bidder, maintenance is a job for experienced engineers. Not &amp;ldquo;the short straw&amp;rdquo;, brown field development can be more exciting than a feature factory. After all, the shiny code written today is the legacy code of tomorrow&amp;hellip;</description></item><item><title>Why AppSec fails</title><link>https://beny23.github.io/posts/why_appsec_fails/</link><pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate><guid>https://beny23.github.io/posts/why_appsec_fails/</guid><description>Let me tell you a story about Application Security (AppSec). It contains heroes and villains, and I&amp;rsquo;m not necessarily thinking about the defenders and attackers here. It contains lots of interesting technology that is often overemphasised. We&amp;rsquo;ve got whole industries that work on letting us know how scary it is out there, vulnerabilities that are marketed like rock stars and terminology that makes you quiver in your boots: who would want to fall victim to an Advanced Persistent Threat (APT)?</description></item><item><title>The agile power of saying no</title><link>https://beny23.github.io/posts/notes_from_a_small_conference/</link><pubDate>Fri, 07 Oct 2022 17:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/notes_from_a_small_conference/</guid><description>I am sitting on the train as I type this coming back from my first IRL conference. Lean Agile Scotland 2022 was brilliant. I met so many people with ideas that just chime with my thinking on agile, I feel energised and full of ideas
No Bugs No Decisions No Deadlines No Fear What follows are some thoughts that I took away from some of sessions the conference. There were lots of exciting talks and workshops and it was a pity that I couldn&amp;rsquo;t clone myself to go to more of them (I was gutted to miss sessions that coincided with my own talk).</description></item><item><title>What do you think are the most exciting developments in software product engineering today?</title><link>https://beny23.github.io/posts/agile_india_2022_speaker_interview_questions_3/</link><pubDate>Thu, 08 Sep 2022 23:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/agile_india_2022_speaker_interview_questions_3/</guid><description>This is part of my series of interview questions for Agile India 2022.
Thinking about exciting developments in software development as a developer immediately brings magpies to mind. What is the latest technology that can grab our attention. What&amp;rsquo;s the latest shiny? Could it be some crypto tech? Some no-code development? Or programming in the metaverse maybe?
No, no, and NO! Crypto is a scourge that wastes energy, kills the planet and destroys lives, no-code and low code will mean some actual software engineers will have to pick up the pieces when it inevitably will go wrong and the metaverse (second second life) looks to be a great way to make the web as tedious to use than going to an actual shop where you can&amp;rsquo;t find anything because the items have moved to another shelf yet again.</description></item><item><title>What do you think is the biggest challenge faced by the software product engineering community today?</title><link>https://beny23.github.io/posts/agile_india_2022_speaker_interview_questions_2/</link><pubDate>Thu, 08 Sep 2022 03:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/agile_india_2022_speaker_interview_questions_2/</guid><description>This is part of my series of interview questions for Agile India 2022.
It is difficult to articulate what the biggest challenge to software product engineering is, because there&amp;rsquo;s a fair few of them, so I&amp;rsquo;ll try to describe a few of my bug bears.
Process over people In my opinion, a huge issue that we unfortunately find all too often is when the principles of the agile manifesto are ignored or not applied.</description></item><item><title>What got you started in modern software development methods?</title><link>https://beny23.github.io/posts/agile_india_2022_speaker_interview_questions/</link><pubDate>Thu, 08 Sep 2022 02:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/agile_india_2022_speaker_interview_questions/</guid><description>After being accepted for speaking at Agile India 2022 I was asked a few questions. I figured rather than a paragraph, the questions would make interesting blog posts:
I came to agile completely the wrong way. I&amp;rsquo;ve been developing software professionally since I was a teenager and was lucky enough to start out with projects where I was given plenty of agency to decide on how to tackle problems and the independence to make my own mistakes and learn from them.</description></item><item><title>Less is more agile</title><link>https://beny23.github.io/posts/my_take_on_engineering_room_9/</link><pubDate>Thu, 01 Sep 2022 02:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/my_take_on_engineering_room_9/</guid><description>Dave Farley and Allen Holub are two people that I respect hugely when it comes to Software Development. I&amp;rsquo;ve been following them on twitter for quite a while, and am always taken in about their takes on driving continuous delivery and &amp;ldquo;lowercase agile&amp;rdquo; forward. So when both came together for Dave&amp;rsquo;s Engineering Room (sponsored by Equal Experts, who I work with), it was bound to be very interesting.
In this post I try to outline my key takeaways from watching the chat.</description></item><item><title>A mission statement that actually makes sense</title><link>https://beny23.github.io/posts/simple_and_secure_services_for_all/</link><pubDate>Thu, 11 Aug 2022 16:40:01 +0100</pubDate><guid>https://beny23.github.io/posts/simple_and_secure_services_for_all/</guid><description>I was really positively and pleasantly surprised when I found out what HMRC Digital&amp;rsquo;s mission statement was.
Normally, I am not a fan of mission statements. They usually read like this:
Our mission is focused on six core aspirations the company continually strives to achieve&amp;hellip;
Or some such drivel. Verbal gymnastics to make a company sound like everything to everyone - without being offensive to anyone - which then gets used to &amp;ldquo;align&amp;rdquo; people on mandated fun days.</description></item><item><title>Curating Dependency Vulnerabilities</title><link>https://beny23.github.io/posts/curating_vulnerabilities/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://beny23.github.io/posts/curating_vulnerabilities/</guid><description>In this post, I am going to look at an increasingly important part of securing applications: Your supply chain. This includes every library, tool or service that you are using to build, run and monitor your service.
When the log4shell vulnerability hit, it wasn&amp;rsquo;t just a matter of looking at the dependencies that your source code pulls in, but also at the infrastructure you&amp;rsquo;re using and the build pipeline.
Have you had a look at the vulnerability reports of your dependencies lately?</description></item><item><title>How to run a Digital Platform at Scale</title><link>https://beny23.github.io/posts/catalogue_deepdive/</link><pubDate>Sat, 02 Apr 2022 01:48:32 +0000</pubDate><guid>https://beny23.github.io/posts/catalogue_deepdive/</guid><description>This post peels back the covers on what it is like to work with a large digital platform. The platform in question is MDTP - Multichannel Digital Tax Platform, which supports a UK-based tax collection agency which is using a hyperscale cloud provider with a sideline in books.
I&amp;rsquo;ve previously described what it is like to work in MDTP (Making Software. Quickly) during the Covid-19 responses that allowed the UK government to provide financial support for millions turning around projects in record time.</description></item><item><title>What makes a good developer</title><link>https://beny23.github.io/posts/what_makes_a_good_developer/</link><pubDate>Sun, 13 Feb 2022 00:32:20 +0000</pubDate><guid>https://beny23.github.io/posts/what_makes_a_good_developer/</guid><description>A few days back as part of a general discussion about interviewing at Equal Experts, we looked at the question &amp;ldquo;What makes a good developer?&amp;rdquo; Could we come up with a list of qualities in a developer that we&amp;rsquo;d want to look for? This post illustrates my thinking.
Why do you ask? To put it in a bit of context, I&amp;rsquo;m a software developer, I&amp;rsquo;m not a recruiter, but I&amp;rsquo;ve been involved with technical interviewing for quite a while, and have marked a fair number of take-home tests over the years, but recently we thought that the experience was not as good as it could be.</description></item><item><title>Context and Lines - My Take on Engineering Room Ep 1</title><link>https://beny23.github.io/posts/my_take_on_engineering_room_1/</link><pubDate>Fri, 10 Dec 2021 16:30:32 +0000</pubDate><guid>https://beny23.github.io/posts/my_take_on_engineering_room_1/</guid><description>Dave Farley and Martin Fowler are two heavyweights when it comes to Software Development. As well as his latest and hugely anticipated book Modern Software Engineering, Dave wrote Continuous Delivery. Martin co-wrote the Agile Manifesto and Refactoring. All of which are hugely influential to large swathes of software engineers. So when both came together for Dave&amp;rsquo;s new series on YouTube, the Engineering Room (sponsored by Equal Experts), it was bound to be very interesting.</description></item><item><title>Record and publish your meeting</title><link>https://beny23.github.io/posts/screen_record_meetings/</link><pubDate>Sun, 22 Aug 2021 21:43:47 +0100</pubDate><guid>https://beny23.github.io/posts/screen_record_meetings/</guid><description>Scenario: You&amp;rsquo;re in a handover session and explain everything in great detail but Dave is too hungover, Jim is on holiday and Jane is at another meeting and Chris isn&amp;rsquo;t asking any questions and in any case Trevor (who is actually going to be looking after this system after handover) hasn&amp;rsquo;t been recruited yet.
Wouldn&amp;rsquo;t it be useful to record the session and make it available? Now, this piece of writing does not explore whether we should be recording meetings, nor does it attempt to answer the question of whether good documentation wouldn&amp;rsquo;t be preferable to having to sit and spend hours watching someone droning on about something that could be condensed into a five minute read of a blog post.</description></item><item><title>The Shield and the Sword</title><link>https://beny23.github.io/posts/the_shield_and_the_sword/</link><pubDate>Sun, 19 Jul 2020 15:40:01 +0100</pubDate><guid>https://beny23.github.io/posts/the_shield_and_the_sword/</guid><description>To successfully deliver software a developer needs a shield and a sword.
A good product owner, delivery manager or alike that will shield the engineers from having to attend too many meetings, giving long-winded status updates and essentially allow them to get on with it. Shields go to all the meetings with the &amp;ldquo;business&amp;rdquo; and explain what can and cannot be done, without the engineer having to attend. A shield would also filter all the last-minute requirements or requests for gold plating without having to be dragged into endless meetings.</description></item><item><title>Making Software. Quickly.</title><link>https://beny23.github.io/posts/making_software_quickly/</link><pubDate>Sun, 19 Jul 2020 08:54:48 +0100</pubDate><guid>https://beny23.github.io/posts/making_software_quickly/</guid><description>In this post, I describe my personal experience of being part of a software development team working with Equal Experts and HMRC during Covid-19. Under normal circumstances, we&amp;rsquo;re responsible for tax services such as Self Assessment, PAYE Expenses and Benefits, VAT submissions amongst others. These services run on the Multi-channel Digital Tax Platform (MDTP). This platform is hosted in a hyperscale cloud (the cloud provider has a sideline selling books), run in-house by HMRC teams made up of permanent staff and consultants.</description></item></channel></rss>